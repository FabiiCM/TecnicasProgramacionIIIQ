@page "/clase/crear"
@using Microsoft.EntityFrameworkCore
@using src.Model.Gestion
@using src.Model.Personas
@rendermode InteractiveServer
@inject NavigationManager NavigationManager
@inject ProyectoGym.src.Controller.ClaseController ClaseController
@inject ProyectoGym.src.Controller.EntrenadorController EntrenadorController

<PageTitle>Crear</PageTitle>

<h1>Crear</h1>

<h2>Clase</h2>
<hr />
<div class="row">
    <div class="col-md-4">
        <form @onsubmit="CrearClase">
            <div class="mb-3">
                <label for="nombre" class="form-label">Nombre:</label>
                <input type="text" id="nombre" @bind="Nombre" class="form-control" />
            </div>
            <div class="mb-3">
                <label for="horario" class="form-label">Horario:</label>
                <input type="text" id="horario" @bind="Horario" class="form-control" />
            </div>
            <div class="mb-3">
                <label for="CupoMaximo" class="form-label">Cupo Máximo:</label>
                <input type="number" id="CupoMaximo" @bind="CupoMaximo" class="form-control" />
            </div>
            <div class="mb-3">
                <label for="cliente" class="form-label">Entrenador:</label>
                <InputSelect id="cliente" class="form-control" @bind-Value="EntrenadorId">
                    <option value="-1">Seleccione un entrenador</option>
                    @foreach (var entrenador in Entrenadores)
                    {
                        <option value="@entrenador.ID">@entrenador.NombreCompleto</option>
                    }
                </InputSelect>
            </div>

            <button type="submit" class="btn btn-primary">Crear</button>
        </form>
        <div class="form-floating mb-3">
            @if (!string.IsNullOrEmpty(error))
            {
                <p style="color: red;">@error</p>
            }
        </div>
    </div>
</div>

<div>
    <a href="/clases">Regresar al listado</a>
</div>

@code {

    private List<Person> Entrenadores = new List<Person>();
    private string Nombre { get; set; }
    private int CupoMaximo { get; set; }
    private string Horario { get; set; }
    private int EntrenadorId = -1;
    private string error;

    private async Task CrearClase()
    {
        try
        {
        var clase = new Clase
            {
                Nombre = Nombre,
                CupoMaximo = CupoMaximo,
                Horario = Horario,
            };

        await ClaseController.Crear(clase, EntrenadorId);
        NavigationManager.NavigateTo("/clases");
        }catch (Exception e)
        {
            error = e.Message;
        }
    }

    protected override async Task OnInitializedAsync()
    {
        Entrenadores = await EntrenadorController.ListarEntrenadores();
    }
}

