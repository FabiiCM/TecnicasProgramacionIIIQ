@page "/clase/reservar"
@using Microsoft.EntityFrameworkCore
@using src.Model.Gestion
@inject NavigationManager NavigationManager
@inject ProyectoGym.src.Controller.ClaseController ClaseController
@inject ProyectoGym.src.Controller.ReservaController ReservaController
@inject ProyectoGym.src.Controller.PersonaController PersonaController
@rendermode InteractiveServer

<PageTitle>Crear</PageTitle>

<h2>Reservar Clase</h2>
<hr />
<div class="row">
    <div class="col-md-4">
        <form @onsubmit="ReservarClase">
            <div class="mb-3">
                <label for="clase" class="form-label">Clase:</label>
                <InputSelect id="clase" class="form-control" @bind-Value="ClaseId">
                    <option value="-1">Seleccione una clase</option>
                    @foreach (var clase in clases)
                    {
                        <option value="@clase.ID">@clase.Nombre</option>
                    }
                </InputSelect>
            </div>
            <div class="mb-3">
                <label for="fechaReserva" class="form-label">Fecha reservación:</label>
                <input type="date" id="fechaReservación" class="form-control" @bind="FechaReserva" />
            </div>
            <div class="form-floating mb-3">
                @if (!string.IsNullOrEmpty(error))
                {
                    <p style="color: red;">@error</p>
                }
            </div>
            <button type="submit" class="btn btn-primary">Reservar</button>
        </form>
    </div>
</div>

<div>
    <a href="/clases">Regresar al listado</a>
</div>

@code {

    [SupplyParameterFromForm]
    private Reserva Reserva{ get; set; } = new();
    private List<Clase> clases = new List<Clase>();
    private int ClaseId = -1;
    private int ClienteId;
    private DateTime FechaReserva{ get; set; }
    private string error;

    protected override async Task OnInitializedAsync()
    {
        clases = await ClaseController.ListarClases();
    }

    private async Task ReservarClase()
    {
        try
        {
            ClienteId = PersonaController.PersonaAutenticada().ID;
            var reserva = new Reserva
                {
                    FechaReserva = FechaReserva,
                };
            await ReservaController.Crear(reserva, ClaseId, ClienteId);
            NavigationManager.NavigateTo("/clases");
        }
        catch (Exception e)
        {
            error = e.Message;    
        }

    }
}

