@page "/membresia/afiliar"
@using Microsoft.EntityFrameworkCore
@using src.Model.Gestion
@using src.Model.Personas
@rendermode InteractiveServer
@inject NavigationManager NavigationManager
@inject ProyectoGym.src.Controller.MembresiaController MembresiaController
@inject ProyectoGym.src.Controller.ClientesController ClienteController

<PageTitle>Afiliación</PageTitle>

<h2>Afiliar Cliente</h2>
<hr />
<div class="row">
    <div class="col-md-4">
        <form @onsubmit="AfiliarCliente">
            <div class="mb-3">
                <label for="cliente" class="form-label">Cliente:</label>
                <InputSelect id="cliente" class="form-control" @bind-Value="ClienteId">
                    <option value="-1">Seleccione un cliente</option>
                    @foreach (var cliente in clientes)
                    {
                        <option value="@cliente.ID">@cliente.NombreCompleto</option>
                    }
                </InputSelect>
            </div>

            <div class="mb-3">
                <label for="costo" class="form-label">Costo:</label>
                <input type="number" id="costo" class="form-control" @bind="Costo" step="0.01" />
            </div>

            <div class="mb-3">
                <label for="fechaVencimiento" class="form-label">Fecha Vencimiento:</label>
                <input type="date" id="fechaVencimiento" class="form-control" @bind="FechaVencimiento" />
            </div>

            <button type="submit" class="btn btn-primary">Afiliar</button>
        </form>
    </div>
    <div class="form-floating mb-3">
    </div>
</div>

@code {
    private List<Person> clientes = new List<Person>();

    private int ClienteId = -1;
    private decimal Costo { get; set; }
    private DateTime FechaVencimiento { get; set; } = DateTime.Today;

    private async Task AfiliarCliente()
    {
        var membresia = new Membresia
            {
                Costo = Costo,
                FechaVencimiento = FechaVencimiento,
                FechaInicio = DateTime.Now,
                Estado = true
            };
        await MembresiaController.Afiliar(membresia, ClienteId);
        NavigationManager.NavigateTo("/membresias");

    }

    protected override async Task OnInitializedAsync()
    {
        clientes = await ClienteController.ListarClientes();
    }
}

