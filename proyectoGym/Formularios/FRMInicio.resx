<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEBLAEsAAD/4QBWRXhpZgAATU0AKgAAAAgABAEaAAUAAAABAAAAPgEbAAUAAAAB
        AAAARgEoAAMAAAABAAIAAAITAAMAAAABAAEAAAAAAAAAAAEsAAAAAQAAASwAAAAB/9sAQwAFAwQEBAMF
        BAQEBQUFBgcMCAcHBwcPCwsJDBEPEhIRDxERExYcFxMUGhURERghGBodHR8fHxMXIiQiHiQcHh8e/9sA
        QwEFBQUHBgcOCAgOHhQRFB4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4e
        Hh4eHh4e/8AAEQgBaAHCAwERAAIRAQMRAf/EAB0AAQACAgMBAQAAAAAAAAAAAAAHCAUGAwQJAQL/xABJ
        EAABAwQAAwQHBAYGBwkAAAAAAQIDBAUGEQcSIQgTMUEUIlFhcYGRFRYyghcjQlJWoWJykpOj4QklJzdD
        g9NFU1Vlc3WytNH/xAAWAQEBAQAAAAAAAAAAAAAAAAAAAQL/xAAYEQEBAQEBAAAAAAAAAAAAAAAAAREh
        Mf/aAAwDAQACEQMRAD8AuWAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAj7jnxTtHCzF47nXQPra6resVBRMdyrM9E25Vd+yxqa2ul
        8UREVVCyKwxdrfiGl1Sols2Ovo+brSpFK1eX2JJzqu/fr5BcW14U5xa+IeE0WT2pkkMc/MyaCRUV8ErV
        0+NVToul8F80VF8wy2oAAAAAAAAAAAAAAAAAAAAAAAAAAI+zLjRwzxG7vtF8yqlhr411LBDHJO6JfY/u
        2ryr7l6gxs+H5XjmX2pLpjV4pLpSKvKslPJvld+65PFq+5URQM0AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAGwKmf6QOyVjvutkbFc+ij7+hkTyZI7lkavzRjk/KgWKmhpaPsDZf6Pe73hFTLqOrjS4UbVX/iM0yV
        E+LVYv5VCVcIMupebnQWa1VV1ulVFSUVJE6aeeRdNjY1Nq5V9iAaN+nHhL/H1j/v/wDILj63jfwmc5Gt
        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
        q+16aVrl96pv3g1meDvDHH+F9iqrXYpKuo9LqO/qKiqc10j3cqNRPVRERqInRNea+0I3gAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABGHE/gVgHEK8fbN5o6ulubmo2WqoZ+6fMiJpvOiorXKidN63rpsLrucMuDOAcP
        ar06w2hX3HlVqV1ZIs07UXxRqr0Zv+iibBqQnta9isciK1U0qKm0VAiMbhwA4RV11dcpsLo2yvdzuZFL
        LHE5f/Ta5G/LWgupEtFtt9otsFttdFT0VFTt5IYII0ZHGnsRqdECO2AAAAAAAAAAAAAAAAAAAADAcQMT
        s+b4lXY1fIXSUdYxEVzF0+NyLtr2L5OaqIqf/gFQ752SM7gurorPe7FXUKu9SeeSSCRG/wBJiNcm/goa
        1Yrs8cIqPhVj1VC+tbcbxcHNfW1TWcrNNReWNiL1Rqbcu16qqqvToiEtbZxAwTFM8tTbdlNngr4o1V0L
        122WFy+bHt05q/BevnsIjewdmDhZabzFcnUt0uPdPR7KatrOeHadU21GpzJ7nKqe3YXU2NRERETwQI+g
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAP//Z
</value>
  </data>
</root>